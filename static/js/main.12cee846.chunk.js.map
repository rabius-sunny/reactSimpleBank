{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","deposit","setDeposit","withdraw","setWithdraw","amount","setAmount","className","onChange","e","money","parseFloat","target","value","type","placeholder","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAiFeA,MA7Ef,WAAgB,IAAD,EACiBC,mBAAS,GAD1B,mBACNC,EADM,KACGC,EADH,OAEmBF,mBAAS,GAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGeJ,mBAAS,KAHxB,mBAGNK,EAHM,KAGEC,EAHF,KAsBb,OACE,sBAAKC,UAAU,MAAf,UACE,8BACE,oBAAIA,UAAU,oCAAd,qCAEF,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,yCACA,oCAAON,UAGX,qBAAKM,UAAU,WAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,0CACA,oCAAOJ,UAGX,qBAAKI,UAAU,WAAf,SACE,sBAAKA,UAAU,wBAAf,UACE,uCACA,oCAAOF,iBAMjB,qBAAKE,UAAU,aAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,SAAf,UACE,yCACA,uBAAOC,SAtDD,SAAAC,GACpB,IAAIC,EAAQC,WAAWF,EAAEG,OAAOC,OAChCX,EAAWQ,IAoDmCH,UAAU,eAAeO,KAAK,SAASC,YAAY,8BAFrF,IAEoH,uBAClH,wBAAQC,QA/CC,WACnBf,EAAU,GACZK,EAAUD,EAASJ,IA6C4BM,UAAU,wBAA7C,0BAGJ,qBAAKA,UAAU,WAAf,SACE,sBAAKA,UAAU,SAAf,UACE,0CACA,uBAAOC,SAzDA,SAAAC,GACrB,IAAIC,EAAQC,WAAWF,EAAEG,OAAOC,OAChCT,EAAYM,IAuDmCH,UAAU,eAAeO,KAAK,SAASC,YAAY,+BAFtF,IAEsH,uBACpH,wBAAQC,QAjDE,WACpBb,EAAW,GACbG,EAAUD,EAASF,IA+C6BI,UAAU,wBAA9C,wCC1DHU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.12cee846.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './App.css';\n\n\nfunction App() {\n  const [deposit, setDeposit] = useState(0)\n  const [withdraw, setWithdraw] = useState(0)\n  const [amount, setAmount] = useState(1000)\n  const handleDeposit = e => {\n    let money = parseFloat(e.target.value)\n    setDeposit(money)\n  }\n  const handleWithDraw = e => {\n    let money = parseFloat(e.target.value)\n    setWithdraw(money)\n  }\n  const handleDepositBtn = () => {\n    if (deposit > 0) {\n      setAmount(amount + deposit)\n    }\n  }\n  const handleWithDrawBtn = () => {\n    if (withdraw > 0) {\n      setAmount(amount - withdraw)\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div>\n        <h1 className=\"text-center headbg p-5 text-white\">Welcome To Ocean Bank</h1>\n      </div>\n      <div className=\"pt-5 pb-5\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-4\">\n              <div className=\"showItem1 text-center\">\n                <h3>Deposit</h3>\n                <h1>$ {deposit}</h1>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"showItem2 text-center\">\n                <h3>WithDraw</h3>\n                <h1>$ {withdraw}</h1>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"showItem3 text-center\">\n                <h3>Total</h3>\n                <h1>$ {amount}</h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"inputItems\">\n        <div className=\"container\">\n          <div className=\"container pt-5 pb-5\">\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className=\"myCard\">\n                  <h3>Deposit</h3>\n                  <input onChange={handleDeposit} className=\"form-control\" type=\"number\" placeholder=\"Enter your Deposit amount\" /> <br />\n                  <button onClick={handleDepositBtn} className=\"btn btn-outline-light\">Deposit</button>\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"myCard\">\n                  <h3>Withdraw</h3>\n                  <input onChange={handleWithDraw} className=\"form-control\" type=\"number\" placeholder=\"Enter your Withdraw amount\" /> <br />\n                  <button onClick={handleWithDrawBtn} className=\"btn btn-outline-light\">Withdraw</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}